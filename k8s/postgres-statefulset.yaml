apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: eda
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          args:
            - -c
            - wal_level=logical
            - -c
            - max_wal_senders=10
            - -c
            - max_replication_slots=10
            - -c
            - wal_keep_size=64
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_DB } }
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
            - name: pg-init
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
          readinessProbe:
            exec: { command: ["pg_isready","-U","debezium"] }
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket: { port: 5432 }
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: pg-init
          configMap:
            name: pg-init
  volumeClaimTemplates:
    - metadata:
        name: pg-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        # storageClassName: standard
